<Page
    x:Class="Eddens.App.Pages.PreparationPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Eddens.App.Pages"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
	xmlns:vc="using:Eddens.App.ValueConvertors"
	xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
	xmlns:ui="using:Microsoft.Toolkit.Uwp.UI"
	xmlns:media="using:Microsoft.Toolkit.Uwp.UI.Media"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
	NavigationCacheMode="Disabled">

	<Page.Resources>
		<media:AttachedCardShadow x:Key="CommonShadow" BlurRadius="10" Offset="4,4"/>
	</Page.Resources>
	
	<RelativePanel Padding="10">
		<TextBlock
                x:Name="PageTitle"
                Style="{StaticResource PageTitleTextBlockStyle}"
                Text="Preparation step" />

		<CommandBar
                x:Name="MainCommandBar"
                HorizontalAlignment="Stretch"
                Background="Transparent"
                DefaultLabelPosition="Right"
                RelativePanel.RightOf="PageTitle">
			<AppBarButton
                    Click="{x:Bind ViewModel.SaveAsync}"
                    Icon="Save"
                    Label="Save"
                    Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}"/>
			<AppBarButton
                    Click="{x:Bind ViewModel.CancelEditsAsync}"
                    Icon="Cancel"
                    Label="Cancel"
                    Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
			<AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}"/>
			<AppBarButton
                    Click="{x:Bind ViewModel.StartEdit}"
                    Icon="Edit"
                    IsEnabled="{x:Bind vc:Converters.Not(ViewModel.IsInEdit), Mode=OneWay}"
                    Visibility="{x:Bind vc:Converters.CollapsedIf(ViewModel.IsNewPreparation), Mode=OneWay}"
                    Label="Edit" />
		</CommandBar>

		<ScrollViewer
                x:Name="DetailPanel"
                RelativePanel.AlignLeftWithPanel="True"
                RelativePanel.AlignRightWithPanel="True"
                RelativePanel.Below="PageTitle"
                VerticalScrollBarVisibility="Auto"
                VerticalScrollMode="Auto">

			<StackPanel 
                    Margin="0,8,4,0">
				<StackPanel.Resources>
					<Style TargetType="muxc:Expander">
						<Setter Property="HorizontalAlignment" Value="Stretch"/>
						<Setter Property="HorizontalContentAlignment" Value="Left"/>
					</Style>
				</StackPanel.Resources>

				<muxc:Expander x:Name="GeneralExpander" IsExpanded="True">
					<muxc:Expander.Header>
						<Grid>
							<TextBlock 
                                    Text="Details"
                                    Style="{ThemeResource SubtitleTextBlockStyle}"/>
						</Grid>
					</muxc:Expander.Header>

					<RelativePanel 
						x:Name="DetailsAndPicturePanel">
						<!--Details-->
						<RelativePanel 
							RelativePanel.AlignLeftWithPanel="True"
							Margin="8,0,0,12" 
							x:Name="DetailsRelativePanel">
							<TextBox
                                x:Name="Instruction"
                                MinWidth="120"
								PlaceholderText="Type instruction here.."
                                Margin="0,8,16,8"
                                Header="Instruction"
                                IsReadOnly="{x:Bind vc:Converters.Not(ViewModel.IsInEdit), Mode=OneWay}"
								RelativePanel.AlignRightWithPanel="True"
                                RelativePanel.AlignLeftWithPanel="True"
                                Text="{x:Bind ViewModel.Instruction, Mode=TwoWay}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />

							<TimePicker ClockIdentifier="24HourClock"
									x:Name="Time"
									Time="{x:Bind ViewModel.Time, Mode=TwoWay}"
									SelectedTime="{x:Bind ViewModel.Time, Mode=TwoWay}"
									Header="Time"
									MinWidth="120"
									Margin="0,8,16,0"
									MinuteIncrement="5"
									RelativePanel.AlignLeftWithPanel="True"
									RelativePanel.Below="Instruction"
									/>

							<TextBox
                                x:Name="VideoUrl"
                                Grid.Row="1"
                                MinWidth="120"
                                Margin="0,8,16,0"
                                Header="Video link"
								RelativePanel.AlignRightWithPanel="True"
								RelativePanel.AlignVerticalCenterWith="Time"
							    InputScope="Url"
                                IsReadOnly="{x:Bind vc:Converters.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                RelativePanel.RightOf="Time"
							RelativePanel.Below="Instruction"
                                Text="{x:Bind ViewModel.VideoUrl, Mode=TwoWay}" />

							<AppBarButton 
							Label="Browse Image"
							Click="BrowsePhotoButton_Click"
							x:Name="BrowsePhotoButton"
							Icon="OpenFile"
							RelativePanel.Below="Time"
							/>

						</RelativePanel>

						<!--Thumbnail-->
						<Border
							HorizontalAlignment="Right"
							Padding="4"
							ui:Effects.Shadow="{StaticResource CommonShadow}"
							RelativePanel.AlignRightWithPanel="True"
							RelativePanel.RightOf="DetailsRelativePanel"
							RelativePanel.AlignBottomWith="DetailsRelativePanel"
							x:Name="PictureRelativePanel">
							<toolkit:ImageEx 
								HorizontalAlignment="Stretch"
								Stretch="UniformToFill"
								MaxWidth="200"
								Height="200"
								Width="200"
								MaxHeight="200"
								Source="/Assets/Entrecote.jpg"/>

						</Border>

						<Border
							Margin="0 15 0 0"
							Padding="4"
							ui:Effects.Shadow="{StaticResource CommonShadow}"
							RelativePanel.AlignLeftWithPanel="True"
							RelativePanel.Below="DetailsRelativePanel"
							x:Name="VideoRelativePanel">
							<MediaPlayerElement 
								Source="/Assets/fishes.wmv"
								AreTransportControlsEnabled="True"/>
						</Border>
					</RelativePanel>
					
				</muxc:Expander>

				<toolkit:InAppNotification x:Name="Notification"/>
			</StackPanel>
		</ScrollViewer>

		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup>
				<VisualState>
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
					</VisualState.StateTriggers>
				</VisualState>
				<VisualState>
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
					</VisualState.StateTriggers>
				</VisualState>
				<VisualState>
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<!--Thumbnail-->
						<Setter Target="PictureRelativePanel.(RelativePanel.Below)" Value="DetailsRelativePanel"/>
						<Setter Target="PictureRelativePanel.(RelativePanel.AlignRightWithPanel)" Value="True"/>
						<Setter Target="PictureRelativePanel.(RelativePanel.AlignLeftWithPanel)" Value="True"/>
						
						<!--Details-->
						<Setter Target="VideoUrl.(RelativePanel.Below)" Value="Time" />
						<Setter Target="BrowsePhotoButton.(RelativePanel.Below)" Value="VideoUrl" />
						<Setter Target="BrowsePhotoButton.(RelativePanel.Below)" Value="VideoUrl" />
						<Setter Target="DetailPanel.Margin" Value="12,0,0,0" />
						<Setter Target="MainCommandBar.DefaultLabelPosition" Value="Bottom"/>
						
						<!--VideoPlayer-->
						<Setter Target="VideoRelativePanel.(RelativePanel.Below)" Value="PictureRelativePanel"/>
						<Setter Target="VideoRelativePanel.(RelativePanel.AlignBottomWithPanel)" Value="True"/>
					</VisualState.Setters>
				</VisualState>
			</VisualStateGroup>
			<VisualStateGroup>
				<VisualState x:Name="NewPreparation">
					<VisualState.Setters>
						<Setter Target="GeneralExpander.IsExpanded" Value="True"/>
					</VisualState.Setters>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>
	</RelativePanel>
</Page>
