<Page
	x:Class="Eddens.App.Pages.RecipePage"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:local="using:Eddens.App.Pages"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:models="using:CookingRecipe.Core"
	xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
	xmlns:sys="using:System"
	xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
	xmlns:uc="using:Eddens.App.UserControls"
	xmlns:vm="using:Eddens.App.ValueConvertors"
	NavigationCacheMode="Disabled"
	mc:Ignorable="d">

	<RelativePanel Padding="10">
		<TextBlock
			x:Name="PageTitle"
			Style="{StaticResource PageTitleTextBlockStyle}"
			Text="{x:Bind ViewModel.Name, Mode=OneWay}" />

		<CommandBar
			x:Name="MainCommandBar"
			HorizontalAlignment="Stretch"
			Background="Transparent"
			DefaultLabelPosition="Right"
			RelativePanel.RightOf="PageTitle">
			<AppBarButton
				Click="{x:Bind ViewModel.SaveAsync}"
				Icon="Save"
				Label="Save"
				Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
			<AppBarButton
				Click="{x:Bind ViewModel.CancelEditsAsync}"
				Icon="Cancel"
				Label="Cancel"
				Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
			<AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
			<AppBarButton
				Click="{x:Bind ViewModel.StartEdit}"
				Icon="Edit"
				IsEnabled="{x:Bind vm:Converters.Not(ViewModel.IsInEdit), Mode=OneWay}"
				Label="Edit"
				Visibility="{x:Bind vm:Converters.CollapsedIf(ViewModel.IsNewRecipe), Mode=OneWay}" />
			<AppBarButton
				Click="AddIngredient_Click"
				Icon="Shop"
				Label="Add ingredient"
				Visibility="{x:Bind vm:Converters.CollapsedIf(ViewModel.IsNewRecipe), Mode=OneWay}" />

			<AppBarButton
				Click="AddPreparation_Click"
				Icon="Add"
				Label="Preparatation"
				Visibility="{x:Bind vm:Converters.CollapsedIf(ViewModel.IsNewRecipe), Mode=OneWay}" />

			<AppBarButton
				Click="{x:Bind ViewModel.RefreshIngredientsAndPreparations}"
				Icon="Refresh"
				Label="Refresh Details"
				ToolTipService.ToolTip="Refresh ingredients and preparation steps"
				Visibility="{x:Bind vm:Converters.CollapsedIf(ViewModel.IsNewRecipe), Mode=OneWay}" />
		</CommandBar>

		<ScrollViewer
			x:Name="DetailPanel"
			RelativePanel.AlignLeftWithPanel="True"
			RelativePanel.AlignRightWithPanel="True"
			RelativePanel.Below="PageTitle"
			VerticalScrollBarVisibility="Auto"
			VerticalScrollMode="Auto">

			<StackPanel Margin="0,8,4,0">
				<StackPanel.Resources>
					<Style TargetType="muxc:Expander">
						<Setter Property="HorizontalAlignment" Value="Stretch" />
						<Setter Property="HorizontalContentAlignment" Value="Left" />
					</Style>
				</StackPanel.Resources>

				<muxc:Expander x:Name="GeneralExpander" IsExpanded="True">
					<muxc:Expander.Header>
						<Grid>
							<TextBlock Style="{ThemeResource SubtitleTextBlockStyle}" Text="General" />
							<TextBlock
								HorizontalAlignment="Right"
								VerticalAlignment="Center"
								Style="{StaticResource CaptionTextBlockStyle}"
								Text="{x:Bind ViewModel.Category, Mode=OneWay}" />
						</Grid>
					</muxc:Expander.Header>

					<RelativePanel Margin="8,0,0,12">
						<TextBox
							x:Name="RecipeName"
							MinWidth="120"
							Margin="0,8,16,8"
							Header="Name"
							IsReadOnly="{x:Bind vm:Converters.Not(ViewModel.IsInEdit), Mode=OneWay}"
							RelativePanel.AlignLeftWithPanel="True"
							Text="{x:Bind ViewModel.Name, Mode=TwoWay}" />

						<TextBox
							x:Name="Category"
							MinWidth="120"
							Margin="0,8,16,8"
							Header="Category"
							IsReadOnly="{x:Bind vm:Converters.Not(ViewModel.IsInEdit), Mode=OneWay}"
							RelativePanel.AlignLeftWithPanel="True"
							RelativePanel.Below="RecipeName"
							Text="{x:Bind ViewModel.Category, Mode=TwoWay}" />

						<ComboBox
							x:Name="Type"
							Grid.Row="1"
							MinWidth="120"
							Margin="0,8,16,0"
							Header="Type"
							RelativePanel.RightOf="RecipeName"
							SelectedItem="{x:Bind ViewModel.Type, Mode=TwoWay}"
							Visibility="{x:Bind vm:Converters.ExpandedIf(ViewModel.IsInEdit), Mode=OneWay}">
							<x:String>Hot Appetizer</x:String>
							<x:String>Meat dish</x:String>
							<x:String>Dessert</x:String>
						</ComboBox>
						<TextBox
							x:Name="TypeReadonly"
							Grid.Row="1"
							MinWidth="120"
							Margin="0,8,16,0"
							Header="Type"
							IsReadOnly="True"
							RelativePanel.RightOf="RecipeName"
							Text="{x:Bind ViewModel.Type, Mode=TwoWay}"
							Visibility="{x:Bind vm:Converters.CollapsedIf(ViewModel.IsInEdit), Mode=OneWay}" />
						<TextBox
							x:Name="Quantity"
							Grid.Row="1"
							Grid.Column="1"
							MinWidth="132"
							Margin="0,8,16,0"
							Header="Quantity"
							InputScope="Number"
							IsReadOnly="{x:Bind vm:Converters.Not(ViewModel.IsInEdit), Mode=OneWay}"
							RelativePanel.Below="RecipeName"
							RelativePanel.RightOf="Category"
							Text="{x:Bind ViewModel.Quantity, Mode=TwoWay}" />
					</RelativePanel>

				</muxc:Expander>

				<muxc:Expander x:Name="IngredientsExpander" IsExpanded="True">

					<muxc:Expander.Header>
						<Grid>
							<TextBlock Style="{ThemeResource SubtitleTextBlockStyle}" Text="Ingredients" />
							<TextBlock
								HorizontalAlignment="Right"
								VerticalAlignment="Center"
								Style="{StaticResource CaptionTextBlockStyle}"
								Text="{x:Bind ViewModel.Ingredients.Count, Mode=OneWay}" />
						</Grid>
					</muxc:Expander.Header>

					<Grid Margin="0,4,0,0">

						<toolkit:DataGrid
							HorizontalAlignment="Stretch"
							AutoGenerateColumns="False"
							BorderThickness="0"
							CanUserReorderColumns="False"
							CanUserResizeColumns="False"
							GridLinesVisibility="None"
							IsReadOnly="True"
							ItemsSource="{x:Bind ViewModel.Ingredients, Mode=OneWay}"
							SelectedItem="{x:Bind ViewModel.SelectedIngredient, Mode=TwoWay}">
							<toolkit:DataGrid.Columns>
								<toolkit:DataGridTemplateColumn Header="Name" Tag="IngredientName">
									<toolkit:DataGridTemplateColumn.CellTemplate>
										<DataTemplate x:DataType="models:Ingredient">
											<HyperlinkButton
												Margin="12,0"
												Click="ViewIngredientButton_Click"
												Content="{x:Bind Name}" />
										</DataTemplate>
									</toolkit:DataGridTemplateColumn.CellTemplate>
								</toolkit:DataGridTemplateColumn>

								<toolkit:DataGridTextColumn
									Binding="{Binding Units}"
									CanUserSort="False"
									Header="Units" />
								<toolkit:DataGridTextColumn Binding="{Binding Supplier}" Header="Supplier" />

							</toolkit:DataGrid.Columns>
						</toolkit:DataGrid>

						<muxc:ProgressBar
							Margin="0,48,0,0"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Top"
							IsIndeterminate="True"
							Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />

					</Grid>
				</muxc:Expander>

				<muxc:Expander x:Name="PreparationsExpander" IsExpanded="True">

					<muxc:Expander.Header>
						<Grid>
							<TextBlock Style="{ThemeResource SubtitleTextBlockStyle}" Text="Preparations" />
							<TextBlock
								HorizontalAlignment="Right"
								VerticalAlignment="Center"
								Style="{StaticResource CaptionTextBlockStyle}"
								Text="{x:Bind ViewModel.Preparations.Count, Mode=OneWay}" />
						</Grid>

					</muxc:Expander.Header>

					<Grid Margin="0,4,0,0">

						<Grid.Resources>
							<vm:LongToTimeValueConvertor x:Key="longToTimeValueConvertor" />
						</Grid.Resources>

						<toolkit:DataGrid
							HorizontalAlignment="Stretch"
							AutoGenerateColumns="False"
							BorderThickness="0"
							CanUserReorderColumns="True"
							CanUserResizeColumns="False"
							GridLinesVisibility="None"
							IsReadOnly="True"
							ItemsSource="{x:Bind ViewModel.Preparations, Mode=OneWay}"
							SelectedItem="{x:Bind ViewModel.SelectedPreparation, Mode=TwoWay}">
							<toolkit:DataGrid.Columns>

								<toolkit:DataGridTemplateColumn Header="Play" Tag="Play">
									<toolkit:DataGridTemplateColumn.CellTemplate>
										<DataTemplate x:DataType="models:Preparation">
											<AppBarButton Click="PlayVideo_Click" Icon="Play" />
										</DataTemplate>
									</toolkit:DataGridTemplateColumn.CellTemplate>
								</toolkit:DataGridTemplateColumn>

								<toolkit:DataGridTemplateColumn Header="View" Tag="View">
									<toolkit:DataGridTemplateColumn.CellTemplate>
										<DataTemplate x:DataType="models:Preparation">
											<AppBarButton
												Click="ViewPreparation_Click"
												Icon="View"
												Label="View" />
										</DataTemplate>
									</toolkit:DataGridTemplateColumn.CellTemplate>
								</toolkit:DataGridTemplateColumn>

								<toolkit:DataGridTemplateColumn Header="Instruction" Tag="Instruction">
									<toolkit:DataGridTemplateColumn.CellTemplate>
										<DataTemplate x:DataType="models:Preparation">
											<TextBlock
												Padding="3,0"
												VerticalAlignment="Center"
												Style="{ThemeResource BodyTextBlockStyle}"
												Text="{x:Bind Instruction}" />
										</DataTemplate>
									</toolkit:DataGridTemplateColumn.CellTemplate>

								</toolkit:DataGridTemplateColumn>

								<toolkit:DataGridTemplateColumn Header="Time" Tag="Time">
									<toolkit:DataGridTemplateColumn.CellTemplate>
										<DataTemplate x:DataType="models:Preparation">
											<TimePicker
												ClockIdentifier="24HourClock"
												IsEnabled="False"
												SelectedTime="{x:Bind Time, Converter={StaticResource longToTimeValueConvertor}}"
												Time="{Binding Time, Converter={StaticResource longToTimeValueConvertor}}" />
										</DataTemplate>
									</toolkit:DataGridTemplateColumn.CellTemplate>
								</toolkit:DataGridTemplateColumn>



							</toolkit:DataGrid.Columns>
						</toolkit:DataGrid>

						<muxc:ProgressBar
							Margin="0,48,0,0"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Top"
							IsIndeterminate="True"
							Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />

					</Grid>
				</muxc:Expander>
			</StackPanel>
		</ScrollViewer>

		<muxc:TeachingTip
			x:Name="PlayVideoTeachingTip"
			Title="Attached video"
			PreferredPlacement="Auto">
			<muxc:TeachingTip.HeroContent>
				<MediaPlayerElement
					AreTransportControlsEnabled="True"
					AutoPlay="False"
					Source="ms-appx:///Assets/fishes.wmv"
					Visibility="Visible" />
			</muxc:TeachingTip.HeroContent>
		</muxc:TeachingTip>

		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup>
				<VisualState>
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
					</VisualState.StateTriggers>
				</VisualState>
				<VisualState>
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
					</VisualState.StateTriggers>
				</VisualState>
				<VisualState>
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="Type.(RelativePanel.AlignLeftWithPanel)" Value="True" />
						<Setter Target="TypeReadonly.(RelativePanel.AlignLeftWithPanel)" Value="True" />
						<Setter Target="Quantity.(RelativePanel.AlignLeftWithPanel)" Value="True" />

						<Setter Target="Quantity.(RelativePanel.Below)" Value="Category" />
						<Setter Target="Type.(RelativePanel.Below)" Value="Quantity" />
						<Setter Target="TypeReadonly.(RelativePanel.Below)" Value="Quantity" />

						<Setter Target="DetailPanel.Margin" Value="12,0,0,0" />
						<Setter Target="MainCommandBar.DefaultLabelPosition" Value="Bottom" />
					</VisualState.Setters>
				</VisualState>
			</VisualStateGroup>
			<VisualStateGroup>
				<VisualState x:Name="NewCustomer">
					<VisualState.Setters>
						<Setter Target="GeneralExpander.IsExpanded" Value="True" />
						<Setter Target="IngredientsExpander.IsExpanded" Value="False" />
						<Setter Target="PreparationsExpander.IsExpanded" Value="False" />
					</VisualState.Setters>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>
	</RelativePanel>
</Page>
